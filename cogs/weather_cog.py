import discord
from discord.ext import commands
import aiohttp
import os

class WeatherCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.api_key = os.getenv('WEATHER_API_KEY')
        self.weather_icons = {
            "clear": "‚òÄÔ∏è –Ø—Å–Ω–æ",
            "clouds": "‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ",
            "rain": "üåß –î–æ–∂–¥—å",
            "snow": "‚ùÑÔ∏è –°–Ω–µ–≥",
            "thunderstorm": "‚õà –ì—Ä–æ–∑–∞",
            "mist": "üå´ –¢—É–º–∞–Ω"
        }

    @commands.command(name="–ø–æ–≥–æ–¥–∞")
    async def weather(self, ctx, *, city: str):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ"""
        if not self.api_key:
            return await ctx.send("‚ùå API-–∫–ª—é—á –¥–ª—è –ø–æ–≥–æ–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")

        base_url = "https://api.openweathermap.org/data/2.5/weather"
        params = {
            "q": city,
            "appid": self.api_key,
            "units": "metric",
            "lang": "ru"
        }

        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(base_url, params=params) as response:
                    data = await response.json()

                    if data.get("cod") != 200:
                        return await ctx.send(f"üö´ –ì–æ—Ä–æ–¥ {city} –Ω–µ –Ω–∞–π–¥–µ–Ω!")

                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    main = data["main"]
                    weather = data["weather"][0]
                    wind = data["wind"]
                    sys = data["sys"]

                    # –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É
                    weather_type = weather["main"].lower()
                    icon_data = self.weather_icons.get(weather_type, "üå§Ô∏è –ü–∞—Å–º—É—Ä–Ω–æ")
                    icon, status = icon_data.split() if " " in icon_data else ("üå§Ô∏è", "–ü–∞—Å–º—É—Ä–Ω–æ")

                    # –°–æ–∑–¥–∞–µ–º Embed
                    embed = discord.Embed(
                        title=f"{icon} –ü–æ–≥–æ–¥–∞ –≤ {data['name']}, {sys['country']}",
                        color=0x00ff00
                    )
                    embed.add_field(name="üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", value=f"{main['temp']}¬∞C")
                    embed.add_field(name="üí® –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫", value=f"{main['feels_like']}¬∞C")
                    embed.add_field(name="üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å", value=f"{main['humidity']}%")
                    embed.add_field(name="üå¨ –í–µ—Ç–µ—Ä", value=f"{wind['speed']} –º/—Å")
                    embed.add_field(name="üìù –°–æ—Å—Ç–æ—è–Ω–∏–µ", value=weather["description"].capitalize())
                    embed.set_thumbnail(url=f"http://openweathermap.org/img/wn/{weather['icon']}@2x.png")
                    embed.set_footer(text="–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã OpenWeatherMap")

                    await ctx.send(embed=embed)

        except aiohttp.ClientConnectionError:
            await ctx.send("‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É!")
        except Exception as e:
            await ctx.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

async def setup(bot):
    await bot.add_cog(WeatherCog(bot))